git --version версия git
git config --global user.name "ИМЯ" установить глобально (для всех проектов) автор коммита
git congig --global user.email "EMAIL" установить глобально email автора

Типы сообщений:
fix исправление бага
feat новая функциональность
docs изменение в документации
refactor рефакторинг без изменения поведения
style форматирование кода, верстка
test тесты

git init инициализация репозитория
git add . - зафиксировать (добавить) все изменения
git add имя_файла - зафиксировать новый/измененный файл
git commit -m "комментарий" - закоммитить изменение

Ветки
git branch test-2 создать ветку test-2
git checkout test-2 переключиться на ветку test-2
git checkout -b test-2 создать и переключиться на ветку test-2 сразу
git checkout main переключиться обратно на основную ветку
git merge master - находясь на ветке test-2, выполнить слияние c веткой master
git branch - показать локальные ветки (*текущая ветка) название основной ветки по-умолчанию main, master
git branch -d имя_ветки - удалить локальную ветку


Удаленный репо (подключение)
git remote add origin https://github.com/Xostron/git_training.git привязка к удаленному гиту
git push -u origin master - отправка изменений ветки master впервые
git push отправка изменений последующие


Отмена изменений (локальный гит)
git checkout -- test2.txt отменить изменения в фалйе (все будет удалено)
git reset HEAD test2.txt отменить добавление git add
git commit -amend -m "Изменить комментарий" изменить последний коммит (если он еще не отправлен на удлаенные репо - не запушен)
git reset --soft HEAD~1 удалить последний коммит, но оставить изменения в рабочей директории

Временные изменения (скрыть изменения)
git stash - временно сохраняет незавершенные изменения в рабочей директории и индексе
    позволяя "отложить" их и вернуться к чистой рабочей копии. Полезно в ситуациях, когда нудно быстро 
    переключиться на другую задачу или ветку, не коммитя текущие наработки
git stash pop вернуть последнее изменение
git stash drop удалить последний stash

Тэги - отметка релизов
git tag v1.0.0 - создать тэг
git tag -a v1.0.0 -m "comment"
git tag список тэгов
git checkout v1.0.0 переключиться на тэг
git push --tags отправить тэги на удаленный сервер