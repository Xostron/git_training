1 Отличие git от централизованных систем управления версиями
- У каждого участника проекта есть полная копия репозитория (включая историю коммитов)
- Можно работать автономно (коммитить, создавать ветки, просматривать историю) 
без подключения к интернету
- Сервер - точка синхронизации между разработчиками

2.установка имени пользователя по-умолчанию в каждом проекте при коммите
git config --global user.name "ИМЯ"

3. создать новый репо и переименовать главную ветку
git init --initial-branch=develop
Глобальная настройка чтобы все проекты создавались с веткой по-умолчанию develop
git config --global init.defaultBranch develop

4. зафиксировать изменения во всех файлах
git add .

5. Как лучше организовать коммиты для упрощения код-ревью 
и иметь возможность откатить изменения
Выполнять несколько логически связанных коммитов, каждый из 
которых решает отдельную задачу

6. Вы внесли изменения, теперь хотите создать и сразу переключиться на другую ветку
и перенести не закомиченные изменения, но не фиксировать их
git checkout -b "имя ветки"

7. какаия информация имеется в коммите и как посмотреть историю коммитов
коммит = id, автор, дата и время, сообщение коммита, изменения в коде
git log история коммитов
git show - 
git log -p какие изменения были внесены

8. вывести комментариц последнего коммита определенного файлах
git log -1 --pretty=format:"%s"--text2.txt

9. удалить файл из репозитория и локальной директории, включая историю его изменений
git rm "путь к файлу" - удалить из индекса и рабочей директории
git rm --cached "путь к файлу" - удалить из индекса, но оставить в рабочей директории